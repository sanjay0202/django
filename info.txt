#############################################################
venv
#############################################################
python -m venv ./env
.\env\Scripts\activate.bat

#############################################################
django
#############################################################

django-admin help
django-admin startproject projectname .
run django project: python manage.py runserver
create app : python manage.py startapp appname
once the app is created open yourapp->apps.py copy the functionname and 
add it into INSTALLED_APPS in yourproject->settings.py as 'appname.apps.functionname'

create urls.py under yourapp

create templates folder in root and add the path into setting.py->TEMPLATES->DIRS
like DIRS=[os.path.join(BASE_DIR,'templates')]

create a static folder to save all the static elements and 
add the path in settings.py as 
STATIC_ROOT = os.path.join(BASE_DIR,'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'sanjay/static')
]

run python manage.py collectstatic to collect all statics into one place(STATIC_ROOT)

Need pillow python package to use imagefield in models

command to migrate db : 'python manage.py migrate'
command to migrate all models : 'python manage.py makemigrate'
command to migrate specific models : 'python manage.py makemigrate model_name'
command to see how the migration sql query will look like (just for info) : 'python manage.py sqlmigrate model_name 0001' 
where 0001 is migration file that got created when migrate cmd is used


django files and folders :
    __pycache__ : is used to store compiled file , can be deleted but it will appear again when u compile
    __init__.py : not used
    settings.py : all application settings(debug,secret_key,db etc.) are stored here.
    urls.py : all path are saved here(/admin , /home etc.)

#############################################################
jinja
#############################################################
use {% block content %} {% endblock %} jinja in base html
use below in other html to extend the template
{% extends 'base.html' %}
{% block content %}
<h1>about</h1>
{% endblock %}
to load static use {% load static %} at the top of html
to use it in html tags use like <link rel="stylesheet" href="{ % static 'css/style.css' %}">

You can create a part of html and save it a folder partials 
and include in other htmls using {% include 'partials/_topbar.html' %}

to redirect to other page use <a href="{% url 'index' %}"> make sure
that the page is added in the apps url.py file like path('', views.index, name='index')

#############################################################
git
#############################################################

git init
git configure

add all the files that need not to be pushed to git in .gitingore file
refer gitingore.io to files that needs to be removed for each framework

git add .
git commit -m "your message"
to view git configuration :git config --list
git remote add origin <git repo link>
git push 
to create new branch : git checkout -b newbranchname
to push into new branch : git push -u origin newbranchname
to merge into a existing branch checkout to the branch to which you want to merge
 and run : 
 git checkout master   -------> this will go into master branch
 git merge dev  -------> this will merge dev into master branch , now master branch will have dev data

#############################################################
postgres
#############################################################

python packages for postgres : psycopg2 , psycopg2-binary
use cmd "psql -U username" (only works once environment var is set)
CREATE DATABASE db_name OWNER owner_name;
list all db : \l 
exit : \q

#############################################################
db schema
#############################################################
MODEL/DB FIELDS

### LISTING
id: INT
realtor: INT (FOREIGN KEY [realtor])
title: STR
address: STR
city: STR
state: STR
zipcode: STR
description: TEXT
price: INT
bedrooms: INT
bathrooms: INT
garage: INT [0]
sqft: INT
lot_size: FLOAT
is_published: BOOL [true]
list_date: DATE
photo_main: STR
photo_1: STR
photo_2: STR
photo_3: STR
photo_4: STR
photo_5: STR
photo_6: STR


### REALTOR
id: INT
name: STR
photo: STR
description: TEXT
email: STR
phone: STR
is_mvp: BOOL [0]
hire_date: DATE


### CONTACT
id: INT
user_id: INT
listing: INT
listing_id: INT
name: STR
email: STR
phone: STR
message: TEXT
contact_date: DATE